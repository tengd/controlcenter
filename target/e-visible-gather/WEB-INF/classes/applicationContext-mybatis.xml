<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/mvc  
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	 <context:annotation-config/>    
	 
	 <context:component-scan base-package="com.evisible.os">
	    <context:include-filter type="annotation"
	     expression="org.springframework.stereotype.Controller" />

    </context:component-scan>
     <!-- 数据库配置文件 -->
    <context:property-placeholder location="classpath:/properties/jdbc.properties"  ignore-unresolvable="true"/>
   
	   <!-- tomcat jndi -->
	   <!-- <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">  
	        <property name="jndiName">  
	            <value>java:comp/env/jdbc/demoDB</value>  
	        </property>  
	    </bean> -->  
<!-- 系统库配置，系统库用于存储采集系统本身的系统数据 -->
    <bean id="dataSource_system" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
       <!--  <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/> -->
    </bean>
    <!-- 分库的 数据源配置，分库用于存储采集到的数据-->
    <!-- <bean id="dataSource_data" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver_data}"/>
        <property name="url" value="${jdbc.url_data}"/>
        <property name="username" value="${jdbc.username_data}"/>
        <property name="password" value="${jdbc.password_data}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="defaultAutoCommit" value="${jdbc.defaultAutoCommit}"/> 
    </bean> -->
    
    <bean id="dataSource" class="com.evisible.os.controlcenter.base.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="system" value-ref="dataSource_system" />
                <!--  <entry key="data" value-ref="dataSource_data" />-->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSource_system" />
        </bean>
    
	<!-- 配置mybites -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- mybites配置文件 -->
         <property name="configLocation" value="classpath:/mybites-config.xml"/>
          <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    
    <!-- <bean id="userDao" class="com.mdax.system.dao.impl.UserDao">
		  注入SqlSessionTemplate实例 
		   <property name="sqlSession" ref="sqlSessionTemplate" /> 
	</bean>  -->
	
	 <!-- 事务配置(声明式的事务) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	     <property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" order="2" />
</beans>
